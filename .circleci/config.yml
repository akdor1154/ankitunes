# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  python_docker:
    parameters:
      python_docker_tag:
        type: string
    docker:
      #- image: cimg/python:<< parameters.python_docker_tag >>
      - image: akdor1154/cimg-ankitunes:<< parameters.python_docker_tag >>
  publisher:
    docker:
      - image: akdor1154/cimg-ankitunes:3.8

jobs:
  test:
    parameters:
      python_docker_tag:
        type: string
    executor:
      name: python_docker
      python_docker_tag: << parameters.python_docker_tag >>
    steps:

      - checkout

      - restore_cache:
          keys:
            - >
              v1
              python_artifacts
              << parameters.python_docker_tag >>
              {{ checksum "pyproject.toml" }}
              {{ checksum "poetry.lock" }}


      - run:
          name: Install test dependencies
          command: make deps

      - save_cache:
          key: >
              v1
              python_artifacts
              << parameters.python_docker_tag >>
              {{ checksum "pyproject.toml" }}
              {{ checksum "poetry.lock" }}
          paths:
            - .venv

      - run:
          name: mypy
          command: poetry run mypy ankitunes

      - run:
          name: Make
          command: make

      - run:
          name: unit tests
          command: poetry run pytest -sv tests/headless --ankiaddon dist/ankitunes.ankiaddon

      - run:
          name: ui tests
          command: xvfb-run poetry run pytest -sv tests/ui --ankiaddon dist/ankitunes.ankiaddon

      - store_artifacts:
          path: dist/ankitunes.ankiaddon
          destination: ''

      - store_artifacts:
          path: screenshots/
          destination: screenshots/

      - run:
          name: fix workspace stuff
          command: |
            mkdir -p workspace/<< parameters.python_docker_tag >>
            cp -r dist/ankitunes.ankiaddon workspace/<< parameters.python_docker_tag >>

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: workspace
          # Must be relative path from root
          paths:
            - << parameters.python_docker_tag >>/ankitunes.ankiaddon

  register:
    executor:
      name: publisher
    steps:

      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace

      - run:
          name: Install publish deps
          command: poetry install -E publish --no-dev

      - run:
          name: register
          command: poetry run .circleci/publish --addon-id 1456964007 --title 'AnkiTunes' --addon-zip workspace/3.8/ankitunes.ankiaddon

workflows:
  testAndRegister:
    jobs:
      - test:
          matrix:
            parameters:
              #python_docker_tag: ["3.8", "3.9"]
              python_docker_tag: ["3.8", "3.9"]
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
      - register:
          requires:
            - test
          context: AnkiTunes
          filters:
            branches:
              only: master
